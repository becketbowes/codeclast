{"ast":null,"code":"var _jsxFileName = \"/Users/black/Desktop/projects/codeclast/src/components/Contact/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { validateEmail } from \"../../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contact() {\n  _s();\n\n  //set variables for use in form\n  const [email, setEmail] = useState('');\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [errMessage, setErrMessage] = useState('');\n\n  const inputHandle = e => {\n    //get the values of the input\n    const {\n      target\n    } = e;\n    const inputType = target.name;\n    const inputValue = target.value; //set values\n\n    if (inputType === 'email') {\n      setEmail(inputValue);\n    } else if (inputType === 'userName') {\n      setUserName(inputValue);\n    } else if (inputType === 'text') {\n      setText(inputValue);\n    }\n  };\n\n  const submitHandle = e => {\n    e.preventDefault(); //validate\n\n    if (!validateEmail(email) || !userName) {\n      setErrMessage('email or username is invalid');\n      return;\n    } //reset field values\n\n\n    setUserName('');\n    setText('');\n    setEmail('');\n    alert(`tallyho, ${userName}`);\n  };\n\n  const submit = 'submit -->';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        name: \"text\",\n        onChange: inputHandle,\n        type: \"text\",\n        placeholder: \"m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        name: \"email\",\n        onChange: inputHandle,\n        type: \"email\",\n        placeholder: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: userName,\n        name: \"userName\",\n        onChange: inputHandle,\n        type: \"userName\",\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: submitHandle,\n        children: submit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), errMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: errMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Contact, \"PQpNKA7tHhOBvg/LFqWbxU8DQWo=\");\n\n_c = Contact;\n;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","validateEmail","Contact","email","setEmail","userName","setUserName","password","setPassword","errMessage","setErrMessage","inputHandle","e","target","inputType","name","inputValue","value","setText","submitHandle","preventDefault","alert","submit","text"],"sources":["/Users/black/Desktop/projects/codeclast/src/components/Contact/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { validateEmail } from \"../../utils/helpers\";\n\n\nfunction Contact() {\n    //set variables for use in form\n    const [email, setEmail] = useState('');\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n    const [errMessage, setErrMessage] =useState('');\n\n    const inputHandle = (e) => {\n        //get the values of the input\n        const { target } = e;\n        const inputType = target.name;\n        const inputValue = target.value;\n\n        //set values\n        if (inputType === 'email') {\n            setEmail(inputValue);\n        } else if (inputType === 'userName') {\n            setUserName(inputValue);\n        } else if (inputType === 'text') {\n            setText(inputValue);\n        }\n    };\n\n    const submitHandle = (e) => {\n        e.preventDefault();\n\n        //validate\n        if (!validateEmail(email) || !userName) {\n            setErrMessage('email or username is invalid');\n            return;\n        }\n        \n        //reset field values\n        setUserName('');\n        setText('');\n        setEmail('');\n        alert(`tallyho, ${userName}`);\n    };\n\n    const submit = 'submit -->'\n\n    return (\n        <div>\n            <form className=\"form\">\n                <input value={text} name=\"text\" onChange={inputHandle} type=\"text\" placeholder=\"m\" />\n                <input value={email} name=\"email\" onChange={inputHandle} type=\"email\" placeholder=\"email\" />\n                <input value={userName} name=\"userName\" onChange={inputHandle} type=\"userName\" placeholder=\"username\" />\n                <button type=\"button\" onClick={submitHandle}>{submit}</button>\n            </form>\n            {errMessage && (\n                <div>\n                    <p className=\"error-text\">{errMessage}</p>\n                </div>\n            )}\n        </div>\n    )\n};\n\nexport default Contact;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,qBAA9B;;;AAGA,SAASC,OAAT,GAAmB;EAAA;;EACf;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACS,UAAD,EAAaC,aAAb,IAA6BV,QAAQ,CAAC,EAAD,CAA3C;;EAEA,MAAMW,WAAW,GAAIC,CAAD,IAAO;IACvB;IACA,MAAM;MAAEC;IAAF,IAAaD,CAAnB;IACA,MAAME,SAAS,GAAGD,MAAM,CAACE,IAAzB;IACA,MAAMC,UAAU,GAAGH,MAAM,CAACI,KAA1B,CAJuB,CAMvB;;IACA,IAAIH,SAAS,KAAK,OAAlB,EAA2B;MACvBV,QAAQ,CAACY,UAAD,CAAR;IACH,CAFD,MAEO,IAAIF,SAAS,KAAK,UAAlB,EAA8B;MACjCR,WAAW,CAACU,UAAD,CAAX;IACH,CAFM,MAEA,IAAIF,SAAS,KAAK,MAAlB,EAA0B;MAC7BI,OAAO,CAACF,UAAD,CAAP;IACH;EACJ,CAdD;;EAgBA,MAAMG,YAAY,GAAIP,CAAD,IAAO;IACxBA,CAAC,CAACQ,cAAF,GADwB,CAGxB;;IACA,IAAI,CAACnB,aAAa,CAACE,KAAD,CAAd,IAAyB,CAACE,QAA9B,EAAwC;MACpCK,aAAa,CAAC,8BAAD,CAAb;MACA;IACH,CAPuB,CASxB;;;IACAJ,WAAW,CAAC,EAAD,CAAX;IACAY,OAAO,CAAC,EAAD,CAAP;IACAd,QAAQ,CAAC,EAAD,CAAR;IACAiB,KAAK,CAAE,YAAWhB,QAAS,EAAtB,CAAL;EACH,CAdD;;EAgBA,MAAMiB,MAAM,GAAG,YAAf;EAEA,oBACI;IAAA,wBACI;MAAM,SAAS,EAAC,MAAhB;MAAA,wBACI;QAAO,KAAK,EAAEC,IAAd;QAAoB,IAAI,EAAC,MAAzB;QAAgC,QAAQ,EAAEZ,WAA1C;QAAuD,IAAI,EAAC,MAA5D;QAAmE,WAAW,EAAC;MAA/E;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,KAAK,EAAER,KAAd;QAAqB,IAAI,EAAC,OAA1B;QAAkC,QAAQ,EAAEQ,WAA5C;QAAyD,IAAI,EAAC,OAA9D;QAAsE,WAAW,EAAC;MAAlF;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAO,KAAK,EAAEN,QAAd;QAAwB,IAAI,EAAC,UAA7B;QAAwC,QAAQ,EAAEM,WAAlD;QAA+D,IAAI,EAAC,UAApE;QAA+E,WAAW,EAAC;MAA3F;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEQ,YAA/B;QAAA,UAA8CG;MAA9C;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAOKb,UAAU,iBACP;MAAA,uBACI;QAAG,SAAS,EAAC,YAAb;QAAA,UAA2BA;MAA3B;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QARR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH;;GAxDQP,O;;KAAAA,O;AAwDR;AAED,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}